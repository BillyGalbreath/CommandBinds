plugins {
    id 'java'
    id 'com.modrinth.minotaur' version '2.+'
    id 'fabric-loom' version "$fabricLoomVersion"
    id 'com.github.johnrengelman.shadow' version "$shadowJarVersion"
}

defaultTasks 'build'

def buildNum = System.getenv('BUILD_NUMBER') ?: 'SNAPSHOT'
project.group = 'net.pl3x.commandbinds'
project.version = "$minecraftVersion-$buildNum"

repositories {
    mavenLocal()
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://repo.pl3x.net/public/' }
    maven { url = 'https://maven.terraformersmc.com/' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraftVersion"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:$fabricLoaderVersion"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabricApiVersion"

    modImplementation "com.terraformersmc:modmenu:${modmenuVersion}"

    modImplementation include("net.pl3x.keyboard:keyboard:$keyboardVersion")
    modImplementation include("net.pl3x.lib:pl3xlib:$pl3xlibVersion")

    implementation include("com.github.Carleslc.Simple-YAML:Simple-Yaml:$simpleYamlVersion")
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

javadoc {
    options.encoding = 'UTF-8'
    ((CoreJavadocOptions) options).addBooleanOption('html5', true)
    title = "${rootProject.name}-${project.version} API"
}

processResources {
    filteringCharset = 'UTF-8'
    filesMatching('fabric.mod.json') {
        expand(
                'version': project.version,
                'fabricApiVersion': fabricApiVersion,
                'fabricLoaderVersion': fabricLoaderVersion,
                'minecraftVersion': minecraftVersion,
        )
    }
}

loom {
    mixin {
        defaultRefmapName = 'commandbinds.refmap.json'
    }
    accessWidenerPath = file('src/main/resources/commandbinds.accesswidener')
    runConfigs.configureEach {
        ideConfigGenerated(true)
    }
}

modrinth {
    autoAddDependsOn = false
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'commandbinds'
    versionName = "${project.version}"
    versionNumber = "${project.version}"
    versionType = 'release'
    uploadFile = rootProject.layout.buildDirectory.file("libs/${rootProject.name}-${project.version}.jar").get()
    gameVersions.addAll(["${minecraftVersion}"])
    loaders.addAll(['fabric'])
    changelog = System.getenv('COMMIT_MESSAGE')
}
